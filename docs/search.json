[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "rowan-n.github.io",
    "section": "",
    "text": "This is a website I created for my Data Science class. It contains a page about me, as well as a dropdown of a few tidyverse data sets I’ve analysed.\nThis website will be expanded on over the course of the semester!\nThis is a Quarto website.\nTo learn more about Quarto websites visit https://quarto.org/docs/websites."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Rowan Norenberg is a linguistics, data science, and French student. When they’re not in class or studying, they perform in choir and run D&D campaigns for their friends.\n\n\nPomona College | Claremont, CA B.A. in Linguistics | Sept 2023 - June 2027"
  },
  {
    "objectID": "about.html#education",
    "href": "about.html#education",
    "title": "About",
    "section": "",
    "text": "Pomona College | Claremont, CA B.A. in Linguistics | Sept 2023 - June 2027"
  },
  {
    "objectID": "datavis.html",
    "href": "datavis.html",
    "title": "Data Viz",
    "section": "",
    "text": "Here’s where you describe your plots…\n\n\n\nHere’s where you describe dashboards…"
  },
  {
    "objectID": "datavis.html#tidy-verse-1",
    "href": "datavis.html#tidy-verse-1",
    "title": "Data Viz",
    "section": "",
    "text": "Here’s where you describe your plots…"
  },
  {
    "objectID": "datavis.html#tidy-verse-2",
    "href": "datavis.html#tidy-verse-2",
    "title": "Data Viz",
    "section": "",
    "text": "Here’s where you describe dashboards…"
  },
  {
    "objectID": "tidyv1.html",
    "href": "tidyv1.html",
    "title": "Tidy Tuesday - D&D Monsters",
    "section": "",
    "text": "This is a plot I made comparing the different types of D&D monsters with their total hit points and their strength score / modifier.\n\n\n\n\n\n\n\n\n\nTidyverse Link: https://github.com/rfordatascience/tidytuesday/tree/main/data/2024/2024-12-17\nDataset Citation: Harmon J (2025). dddata: Data from the Dungeons and Dragons System Reference Document. R package version 0.0.0.9000, https://github.com/jonthegeek/dddata."
  },
  {
    "objectID": "tidyv2.html",
    "href": "tidyv2.html",
    "title": "Tidy Tuesday - D&D Spells",
    "section": "",
    "text": "This is a plot I made trying to see which of the schools of magic had the longest spell range on average. This was made complicated by the spell range being stored as character strings (eg “30 feet” or “Touch”) so I made levels. Unfortunatley this doesn’t give a great representation at how different 300 feet is from 500 feet versus 5 feet from 10 feet. Work in progress.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTidyverse link: https://github.com/rfordatascience/tidytuesday/tree/main/data/2024/2024-12-17\nDataset Citation: Harmon J (2025). dddata: Data from the Dungeons and Dragons System Reference Document. R package version 0.0.0.9000, https://github.com/jonthegeek/dddata.\nData Source: https://www.dndbeyond.com/srd"
  },
  {
    "objectID": "tidyv3.html",
    "href": "tidyv3.html",
    "title": "Tidy Tuesday - Shakespeare",
    "section": "",
    "text": "You will first find a data set containing string / character data. The data could be on newspaper articles, tweets, songs, scripts, movie reviews, or anything else you can imagine. Then you will answer questions of interest and tell a story about your data using the string and regular expression skills you have developed.\nYour analysis must contain the following elements:\nat least 3 str_() functions (3 different str_() functions) at least 3 regular expressions at least 1 lookaround at least 2 illustrative, well-labeled plots or tables a description of what insights can be gained from your plots and tables a reference / documentation of the data source.\nLogistics: please include all your code used in the analysis (but feel free to use code folding.) make sure that all graphs are well-labeled (including x and y axes, title of the graph, and accurate and succinct labels for color and fill). do not include error or warning messages (see HW YAML for code). include a few sentences describing each of your plots or tables. That is, tell the reader what they see when they look at the plot. Your narrative description should be in the text part of the qmd file, not as a comment in an R chunk.\nplease include the source of the data (which might include, for example, both the link to the data source (e.g., TidyTuesday page) + the original source of the data (e.g., NYT)). if you are working with a (local) copy of the .csv file (as opposed to, for example, a link to the dataset on TidyTuesday’s GitHub site), then the .csv file should live in your GitHub repository for your website. And you should read the data in from that local copy. That is, the dataset should not live in your Downloads.\n\n\nShow the code\n#| echo: false\nlibrary(tidyverse)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(stringr)\n\n\nhamlet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-09-17/hamlet.csv')\nmacbeth &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-09-17/macbeth.csv')\nromeo_juliet &lt;- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/main/data/2024/2024-09-17/romeo_juliet.csv')\n\n\n\n\nShow the code\nhamlet_counts &lt;- hamlet |&gt;\n  filter(!grepl(\"stage\", character, ignore.case = TRUE)) |&gt; \n  count(character, name = \"num_lines\") |&gt;\n  mutate(play = \"Hamlet\") |&gt;\n  arrange(desc(num_lines)) |&gt;\n  slice_head(n = 20)\n\n  \n  \nggplot(hamlet_counts, aes(x = reorder(character, num_lines), y = num_lines)) +\n  geom_col(fill = \"steelblue\") +\n  coord_flip() +\n  labs(\n    title = \"Hamlet: Number of Lines\",\n    x = \"Named Character\",\n    y = \"Total Number of Lines\"\n  ) +\n  theme_minimal(base_size = 14) +  # bigger text\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.text.y = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nmacbeth_counts &lt;- macbeth |&gt;\n  filter(!grepl(\"stage\", character, ignore.case = TRUE)) |&gt; \n  count(character, name = \"num_lines\") |&gt;\n  mutate(play = \"Macbeth\") |&gt;\n  arrange(desc(num_lines)) |&gt;\n  slice_head(n = 20)\n\n  \n  \nggplot(macbeth_counts, aes(x = reorder(character, num_lines), y = num_lines)) +\n  geom_col(fill = \"goldenrod\") +\n  coord_flip() +\n  labs(\n    title = \"Macbeth: Number of Lines\",\n    x = \"Named Character\",\n    y = \"Total Number of Lines\"\n  ) +\n  theme_minimal(base_size = 14) +  # bigger text\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.text.y = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\nShow the code\nromeo_juliet_counts &lt;- romeo_juliet |&gt;\n  filter(!grepl(\"stage\", character, ignore.case = TRUE)) |&gt; \n  count(character, name = \"num_lines\") |&gt;\n  mutate(play = \"Romeo and Juliet\") |&gt;\n  arrange(desc(num_lines)) |&gt;\n  slice_head(n = 20)\n\n  \n  \nggplot(romeo_juliet_counts, aes(x = reorder(character, num_lines), y = num_lines)) +\n  geom_col(fill = \"maroon\") +\n  coord_flip() +\n  labs(\n    title = \"Romeo and Juliet: Number of Lines\",\n    x = \"Named Character\",\n    y = \"Total Number of Lines\"\n  ) +\n  theme_minimal(base_size = 14) +  # bigger text\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    axis.text.y = element_text(size = 10)\n  )\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntragedies &lt;- bind_rows(\n  hamlet |&gt; mutate(play = \"Hamlet\"),\n  macbeth |&gt; mutate(play = \"Macbeth\"),\n  romeo_juliet |&gt; mutate(play = \"Romeo and Juliet\")\n)\n\n\ntragedies_clean &lt;- tragedies |&gt;\n  mutate(\n    dialogue_clean = str_replace_all(\n      dialogue,\n      \"(?&lt;=\\\\[).*?(?=\\\\])\",  \n      \"\"                     \n    ), \n    dialogue_clean = str_replace_all(dialogue_clean, \"\\\\[\\\\]\", \"\") \n  )\n\n\ntragedies_names &lt;- tragedies_clean |&gt;\n  mutate(\n    capitalized_words = str_extract_all(dialogue_clean, \"\\\\b[A-Z][a-z]+\\\\b\")\n  )\n\n\ntragedies_questions &lt;- tragedies_clean |&gt;\n  mutate(num_questions = str_count(dialogue_clean, \"\\\\?\"))\n\n\ntragedies_questions |&gt;\n  group_by(play) |&gt;\n  summarize(avg_questions = mean(num_questions)) |&gt;\n  ggplot(aes(x = play, y = avg_questions, fill = play)) +\n  geom_col(show.legend = FALSE) +\n  labs(\n    title = \"Average Number of Questions per Line by Play\", \n    x = \"Play\", \n    y = \"Number of Questions\"\n    )\n\n\n\n\n\n\n\n\n\n\n\nShow the code\ntragedies &lt;- bind_rows(\n  hamlet |&gt; mutate(play = \"Hamlet\"),\n  macbeth |&gt; mutate(play = \"Macbeth\"),\n  romeo_juliet |&gt; mutate(play = \"Romeo and Juliet\")\n)\n\n\ntragedies_ghosts &lt;- tragedies |&gt;\n  filter(str_detect(dialogue, regex(\"\\\\b(ghost|witch|spirit)\\\\b\", ignore_case = TRUE)))\n\n\nghost_mentions &lt;- tragedies_ghosts |&gt;\n  mutate(\n    supernatural = str_extract(\n      str_to_lower(dialogue),\n      \"\\\\b(ghost|witch|spirit)\\\\b\"\n    )\n  ) |&gt;\n  count(play, supernatural, name = \"num_mentions\")\n\n\nggplot(ghost_mentions, aes(x = play, y = num_mentions, fill = supernatural)) +\n  geom_col(position = \"dodge\") +\n  labs(\n    title = \"Mentions of 'Ghost', 'Witch', and 'Spirit' in Shakespeare's Tragedies\",\n    x = \"Play\",\n    y = \"Number of Mentions\",\n    fill = \"\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title = element_text(size = 18, face = \"bold\"),\n    legend.position = \"top\"\n  )"
  }
]